# Server configuration
server.port=${SERVER_PORT:8081}

# Runtime defaults (override via environment vars or profiles)
# Runtime defaults (override via environment vars or profiles)

# Frontend URL used in emails/links
frontend.url=${FRONTEND_URL:http://localhost:8080}

# JWT configuration
security.jwt.secret-key=${JWT_SECRET:test-dev-secret-change-me}
security.jwt.expiration-time=${JWT_EXPIRATION_MS:3600000}

# File upload
upload.path=${UPLOAD_PATH:src/main/resources/static/uploads/}
spring.mvc.static-path-pattern=${STATIC_PATH_PATTERN:/uploads/**}

# Optional external integrations (safe defaults)
rss.feed.url=${RSS_FEED_URL:}
apininja.api.key=${APININJA_API_KEY:}
apininja.api.url=${APININJA_API_URL:}

# Business config
fitness.program.duration=${FITNESS_PROGRAM_DURATION_DAYS:30}

# MySQL Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/move_minds?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:fitness_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:fitness_password}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# SQL initialization
spring.sql.init.mode=${SPRING_SQL_INIT_MODE:always}
spring.sql.init.continue-on-error=true

# Provide default mail sender to satisfy EmailService
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:25}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:false}

# Disable mail health check to avoid connection attempts in local dev
management.health.mail.enabled=false
app.email.enabled=${APP_EMAIL_ENABLED:false}


